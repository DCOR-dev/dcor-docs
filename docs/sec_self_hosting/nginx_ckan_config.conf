# Note that nginx only caches GET and HEAD (not POST) by default:
# http://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_cache_methods
proxy_cache_path /tmp/nginx_cache levels=1:2 keys_zone=ANONYM:30m max_size=250m;
proxy_cache_path /tmp/nginx_cache_static levels=1:2 keys_zone=STATIC:30m max_size=250m;

server {
    # Use this if you don't have enough space on your root partition
    # for caching large uploads (rw-access to www-data).
    # client_body_temp_path /data/tmp/nginx/client_body 1 2;
    listen       443 ssl http2;
    listen       [::]:443 ssl http2;
    server_name  dcor.mpl.mpg.de;

    ssl_certificate "/etc/ssl/certs/dcor.mpl.mpg.de.cert";
    ssl_certificate_key "/etc/ssl/private/dcor.mpl.mpg.de.key";

    # Uncomment to avoid robots (only on development machines)
    #location = /robots.txt { return 200 "User-agent: *\nDisallow: /\n"; }

    # Block outdated versions of DCOR-Aid.
    if ($http_user_agent ~* "^DCOR-Aid/(0\.[0-13]\.[0-9]|0\.14\.[0-1])") {
       return 400 "Client $http_user_agent outdated.";
    }

    # Avoid spamming the logs by these frequent invalid requests
    location ~ ^(/user/reset|/userportal|/user\.action) {
        deny all;
    }

    # file extensions that should not be used on a CKAN instance
    location ~* \.(aspx|gif|html?|php\d?|pl|rar|sql|tar|tar.gz|zip)$ {
      return 404;
    }

    # static/fully cached locations
    location ~ ^/(api/i18n|base/|favicon.ico$|fonts|images/.*\.(png|jpg)$|webassets) {
        proxy_pass http://127.0.0.1:8080;
        proxy_set_header Host $host;
        proxy_buffering on;
        proxy_cache_key $host$scheme$proxy_host$request_uri;
        # Use the static cache
        proxy_cache STATIC;
        proxy_cache_valid 200 1d;
        proxy_cache_use_stale error timeout invalid_header updating http_500 http_502 http_503 http_504;
        # Ignore anything CKAN or uWSGI say they are caching
        proxy_ignore_headers Expires;
        proxy_ignore_headers X-Accel-Expires;
        proxy_ignore_headers Cache-Control;
        proxy_ignore_headers Set-Cookie;
        proxy_hide_header Expires;
        proxy_hide_header X-Accel-Expires;
        proxy_hide_header Cache-Control;
        proxy_hide_header Pragma;
        proxy_hide_header Set-Cookie;
        # when a client closes the connection then keep the channel to uwsgi open.
        # Otherwise uwsgi throws an IOError and possibly segfaults.
        proxy_ignore_client_abort on;
    }

    # GET allow-list for ckan-related directories
    location ~ ^/($|about$|contact$|dashboard|dataset|imprint$|privacy$|revision) {
        limit_except GET {
              deny all;
            }
        proxy_pass http://127.0.0.1:8080;
        proxy_set_header Host $host;
        # Caching based on cookies does not work since CKAN implemented
        # the beaker `ckan` session cookie.
        # proxy_cache ANONYM;
        # proxy_cache_bypass $cookie_remember_token;
        # proxy_no_cache $cookie_remember_token;
        # proxy_cache_valid 30m;
        # proxy_cache_key $host$scheme$proxy_host$request_uri;
        #
        # when a client closes the connection then keep the channel to uwsgi open.
        # Otherwise uwsgi throws an IOError and possibly segfaults.
        proxy_ignore_client_abort on;
    }

    # GET/POST allow-list for ckan-related directories
    location ~ ^/(api/2/util/|api/3/|ckan-admin|group|login_generic|organization|uploads/(admin|group|user)/.+\.(png|jpg|jpeg)$|user) {
        proxy_pass http://127.0.0.1:8080;
        proxy_set_header Host $host;
        # Caching based on cookies does not work since CKAN implemented
        # the beaker `ckan` session cookie.
        # proxy_cache ANONYM;
        # proxy_cache_bypass $cookie_remember_token;
        # proxy_no_cache $cookie_remember_token;
        # proxy_cache_valid 30m;
        # proxy_cache_key $host$scheme$proxy_host$request_uri;
        #
        # When a client closes the connection, then keep the channel to uwsgi open.
        # Otherwise uwsgi throws an IOError and possibly segfaults.
        proxy_ignore_client_abort on;
    }

    # Redirect /UUID shortcut to /dataset/UUID
    location ~ "^/([a-f0-9\-]{36})$" {
        return 301 /dataset/$1;
    }

}

# Redirect all traffic to SSL
server {
    listen 80;
    listen [::]:80;
    server_name dcor.mpl.mpg.de;
    return 301 https://$host$request_uri;
}

# Optional: Reject traffic that is not directed at `dcor.mpl.mpg.de:80`
server {
    listen 80 default_server;
    listen [::]:80 default_server;
    server_name _;
    return 444;
}

# Optional: Reject traffic that is not directed at `dcor.mpl.mpg.de:443`
server {
listen       443 default_server;
    listen       [::]:443 default_server;
    server_name  _;
    return 444;
    ssl_certificate "/etc/ssl/certs/ssl-cert-snakeoil.pem";
    ssl_certificate_key "/etc/ssl/private/ssl-cert-snakeoil.key";
}
